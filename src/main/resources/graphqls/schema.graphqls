schema {
    query: Query
}

type Query {
    airkoreaData(param: DataParam): [AirkoreaData]
    airkoreaAvailableDatetimes: [String]
    airkoreaStationsByKeyword(keyword: String!, page: Int!, size: Int!): [Station]
    ktData(param: DataParam): [KTData]
    ktAvailableDatetimes: [String]
    ktStationsByKeyword(keyword: String!, page: Int!, size: Int!): [Station]
    observerData(param: DataParam): [ObserverData]
    observerAvailableDatetimes: [String]
    observerStationsByKeyword(keyword: String!, page: Int!, size: Int!): [Station]
    sDoTData(param: DataParam): [SDoTData]
    sDoTAvailableDatetimes: [String]
    sDoTStationsByKeyword(keyword: String!, page: Int!, size: Int!): [Station]
    stations(category: String!, startDatetime: String!, endDatetime: String!): [Station]
    statisticsData(category: String!, startDatetime: String!, endDatetime: String!, stnNm: String!): [StatisticsData]
}

type Station {
    category: String!
    address: String!
    latitude: Float!
    longitude: Float!
    name: String!
    pm25: Float
}

type AirkoreaData {
    datetime: String
    stnNm: String!
    so2: Float
    co: Float
    o3: Float
    no2: Float
    pm10: Float
    pm25: Float
}

type KTData {
    datetime: String
    stnNm: String!
    temperature: Float
    humidity: Float
    pm10: Float
    pm25: Float
}

type ObserverData {
    datetime: String
    stnNm: String!
    temperature: Float
    humidity: Float
    pressure: Float
    pm25: Float
}

type SDoTData {
    datetime: String
    stnNm: String!
    temperature: Float
    relativeHumidity: Float
    windDirection: Float
    windSpeed: Float
    pm10: Float
    pm25: Float
}

type StatisticsData {
    category: String!
    datetime: String!
    stnNm: String!
    pm10: StatisticsValue
    pm25: StatisticsValue
}

type StatisticsValue {
    avg: Float
    goodDays: Float
    badDays: Float
    highDnstyDays: Float
}

input DataParam {
    startDatetime: String!
    endDatetime: String!
    stnNm: String!
}
